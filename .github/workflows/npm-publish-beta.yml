name: Build and Published NPM Package (Beta)

on:
  push:
    branches: [ beta ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    # Verifica se está na branch beta
    if: github.ref == 'refs/heads/beta'

    steps:
      # Fazendo Checkout do código
      - name: Checkout
        uses: actions/checkout@v4

      # Instalando NodeJs
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: https://registry.npmjs.org/

      # Instalando dependências
      - name: Install dependencies
        run: npm install

      # Executando build dos components
      - name: Build
        run: npm run build

      # Verifica e remove versão beta anterior
      - name: Check and remove previous beta version
        working-directory: ./dist
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          BASE_VERSION=$(echo $CURRENT_VERSION | sed 's/-beta\.[0-9]*$//')
          PREV_BETA_NUM=$(($(echo $CURRENT_VERSION | grep -o '[0-9]*$') - 1))
          PREV_VERSION="${BASE_VERSION}-beta.${PREV_BETA_NUM}"
          
          # Verifica se a versão anterior existe
          if npm view "${PACKAGE_NAME}@${PREV_VERSION}" version &>/dev/null; then
            echo "Removendo versão anterior: ${PACKAGE_NAME}@${PREV_VERSION}"
            npm unpublish "${PACKAGE_NAME}@${PREV_VERSION}" --force
          else
            echo "Versão anterior ${PREV_VERSION} não encontrada"
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Publica pacote no NPM
      - name: Publish NPM - BETA
        working-directory: ./dist
        run: npm publish --tag beta
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}