name: Generate Release

on:
  push:
    tags: [ '*.*.*' ]
    branches: [ master ]

jobs:
  generate-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: read

    # Verifica se está na branch master
    if: github.ref == 'refs/heads/master'

    steps:
      # Fazendo Checkout do código
      - name: Checkout
        uses: actions/checkout@v4

      # Obtém os issues de cada milestone
      - name: Get milestone issues
        id: get-issues
        uses: actions/github-script@v7
        with:
          script: |
            const tag = context.ref.replace('refs/tags/', '');
            
            const milestones = await github.rest.issues.listMilestones({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all'
            });
            
            const milestone = milestones.data.find(m => m.title === tag);
            if (!milestone) return '';
            
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              milestone: milestone.number,
              state: 'all'
            });
            
            const issuesList = issues.data
              .map(issue => `#${issue.number} - ${issue.title}`)
              .join('\n');
            
            return issuesList;

      # Realiza a criação do release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ github.ref_name }}"
          body: |
            Release in this version
            ${{ steps.get-issues.outputs.result }}
          draft: false
          prerelease: false
